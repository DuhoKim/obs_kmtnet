#<?cfg paf policy ?>

needCalibRegistry: false

levels: {
    skyTile: "visit" "ccdnum"
    visit: "visit" "ccdnum"
    ccd: "ccdnum"
}
defaultLevel: "ccd"
defaultSubLevels: {
    skyTile: "ccdnum"
    visit: "ccdnum"
}

camera: "../decam/camGeom"

exposures: {
    raw: {
        template:    "%(visit)07d/decam%(visit)07d.fits[%(ccdnum)d]"
        python:      "lsst.afw.image.ExposureF"
        persistable: "ExposureF"
        storage:     "FitsStorage"
        level:       "ccd"
        tables:      "raw"
        columns:     "visit"
        columns:     "ccdnum"
    }

    instcal: {
        template:    "%(visit)07d/instcal%(visit)07d.fits[%(ccdnum)d]"
        python:      "lsst.afw.image.DecoratedImageF"
        persistable: "DecoratedImageF"
        storage:     "FitsStorage"
        level:       "ccd"
        tables:      "raw"
        columns:     "visit"
        columns:     "ccdnum"
    }
    dqmask: {
        template:    "%(visit)07d/dqmask%(visit)07d.fits[%(ccdnum)d]"
        python:      "lsst.afw.image.ImageU"
        persistable: "ImageU"
        storage:     "FitsStorage"
        level:       "ccd"
        tables:      "raw"
        columns:     "visit"
        columns:     "ccdnum"
    }
    wtmap: {
        template:    "%(visit)07d/wtmap%(visit)07d.fits[%(ccdnum)d]"
        python:      "lsst.afw.image.ImageF"
        persistable: "ImageF"
        storage:     "FitsStorage"
        level:       "ccd"
        tables:      "raw"
        columns:     "visit"
        columns:     "ccdnum"
    }

    calexp: {
        template:    "%(visit)07d/calexp/calexp-%(visit)07d_%(ccdnum)02d.fits"
        python:      "lsst.afw.image.ExposureF"
        persistable: "ExposureF"
        storage:     "FitsStorage"
        level:       "ccd"
        tables:      "raw"
        columns:     "visit"
        columns:     "ccdnum"
    }
}

datasets: {

    ccdExposureId: {
        template:     "ignored"
        python:       "lsst.daf.base.PropertySet"
        persistable:  "ignored"
        storage:      "ignored"
        tables:       "raw"
    }
    ccdExposureId_bits: {
        template:     "ignored"
        python:       "lsst.daf.base.PropertySet"
        persistable:  "ignored"
        storage:      "ignored"
        tables:       "raw"
    }
    psf: {
        template:      "%(visit)07d/psf/psf-%(visit)07d_%(ccdnum)02d.boost"
        python:        "lsst.afw.detection.Psf"
        persistable:   "Psf"
        storage:       "BoostStorage"
        tables:        "raw"
    }
    apCorr: {
        template:      "%(visit)07d/apCorr/apCorr-%(visit)07d_%(ccdnum)02d.pickle"
        python:        "lsst.meas.algorithms.ApertureCorrection"
        persistable:   "ApertureCorrection"
        storage:       "PickleStorage"
        tables:        "raw"
    }
    icSrc: {
        template:      "%(visit)07d/icSrc/icSrc-%(visit)07d_%(ccdnum)02d.fits"
        python:        "lsst.afw.table.SourceCatalog"
        persistable:   "SourceCatalog"
        storage:       "FitsCatalogStorage"
        tables:        "raw"
    }
    src: {
        template:      "%(visit)07d/src/src-%(visit)07d_%(ccdnum)02d.fits"
        python:        "lsst.afw.table.SourceCatalog"
        persistable:   "SourceCatalog"
        storage:       "FitsCatalogStorage"
        tables:        "raw"
    }
    icMatch: {
        template:      "%(visit)07d/icMatch/icMatch-%(visit)07d_%(ccdnum)02d.fits"
        python:        "lsst.afw.table.BaseCatalog"
        persistable:   "BaseCatalog"
        storage:       "FitsCatalogStorage"
        tables:        raw
        tables:        raw_skyTile
    }
    calexpBackground: {
        template:      "%(visit)07d/bkgd/bkgd-%(visit)07d_%(ccdnum)02d.fits"
        python:        "lsst.afw.math.BackgroundList"
        persistable:   "PurePythonClass"
        storage:       "FitsCatalogStorage"
        tables:        raw
        tables:        raw_skyTile
    }
    processCcdDecam_config: {
        template:      "config/processCcdDecam.py"
        python:        "lsst.obs.decam.processCcdDecam.ProcessCcdDecamConfig"
        persistable:   "Config"
        storage:       "ConfigStorage"
        tables:        raw
    }
    processCcdDecam_metadata: {
        template:      "%(visit)07d/metadata/metadata-%(visit)07d_%(ccdnum)02d.boost"
        python:        "lsst.daf.base.PropertySet"
        persistable:   "PropertySet"
        storage:       "BoostStorage"
        tables:        raw
    }

    src_schema: {
        template:      "schema/src.fits"
        python:        "lsst.afw.table.SourceCatalog"
        persistable:   "SourceCatalog"
        storage:       "FitsCatalogStorage"
        tables:        raw
        tables:        raw_skyTile
    }
    icSrc_schema: {
        template:      "schema/icSrc.fits"
        python:        "lsst.afw.table.SourceCatalog"
        persistable:   "SourceCatalog"
        storage:       "FitsCatalogStorage"
        tables:        raw
        tables:        raw_skyTile
    }
    deepCoadd_skyMap: {
        template:    "deepCoadd/skyMap.pickle"
        python:      "lsst.skymap.BaseSkyMap"
        persistable: "ignored"
        storage:     "PickleStorage"
        tables:      raw
    }
    deep_makeSkyMap_config: {
        template:      "config/deep_makeSkyMap.py"
        python:        "lsst.pipe.tasks.makeSkyMap.MakeSkyMapTask.ConfigClass"
        persistable:   "Config"
        storage:       "ConfigStorage"
        tables:        raw
    }
    deep_makeSkyMap_metadata: {
        template:      "metadata/deep_makeSkyMap.boost"
        python:        "lsst.daf.base.PropertySet"
        persistable:   "PropertySet"
        storage:       "BoostStorage"
        tables:        raw
    }
    deepDiff_config: {
        template:      "config/deepDiff.py"
        python:        "lsst.pex.config.Config"
        persistable:      "Config"
        storage:    "ConfigStorage"
        tables:        raw
        tables:        raw_skyTile
    }
    deepDiff_metadata: {
        template:      "deepDiff/v%(visit)d/metadata-%(ccdnum)02d.boost"
        python:        "lsst.daf.base.PropertySet"
        persistable:        "PropertySet"
        storage:    "BoostStorage"
        tables:        raw
        tables:        raw_skyTile
    }
    deepDiff_differenceExp: {
        template:      "deepDiff/v%(visit)d/diffexp-%(ccdnum)02d.fits"
        python:        "lsst.afw.image.ExposureF"
        persistable:        "ExposureF"
        storage:    "FitsStorage"
        tables:        raw
        tables:        raw_skyTile
    }
    deepDiff_matchedExp: {
        template:      "deepDiff/v%(visit)d/matchexp-%(ccdnum)02d.fits"
        python:        "lsst.afw.image.ExposureF"
        persistable:        "ExposureF"
        storage:    "FitsStorage"
        tables:        raw
        tables:        raw_skyTile
    }
    deepDiff_diaSrc: {
        template:      "deepDiff/v%(visit)d/diaSrc-%(ccdnum)02d.fits"
        python:        "lsst.afw.table.SourceCatalog"
        persistable:        "SourceCatalog"
        storage:    "FitsCatalogStorage"
        tables:        raw
        tables:        raw_skyTile
    }
    deepDiff_diaSrc_schema: {
        template:      "schema/deepDiff_diaSrc.fits"
        python:        "lsst.afw.table.SourceCatalog"
        persistable:        "SourceCatalog"
        storage:    "FitsCatalogStorage"
        tables:        raw
        tables:        raw_skyTile
    }
    deepDiff_kernelSrc: {
        template:      "deepDiff/v%(visit)d/kernelSrc-%(ccdnum)02d.fits"
        python:        "lsst.afw.table.SourceCatalog"
        persistable:        "SourceCatalog"
        storage:    "FitsCatalogStorage"
        tables:        raw
        tables:        raw_skyTile
    }
}
